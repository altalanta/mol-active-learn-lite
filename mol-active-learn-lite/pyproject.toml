[project]
name = "mol-active-learn-lite"
version = "0.1.0"
description = "Probabilistic molecular property prediction with Bayesian active learning"
authors = [
    {name = "ML Engineering Team", email = "team@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "torch>=2.0.0",
    "lightning>=2.0.0",
    "botorch>=0.9.0",
    "gpytorch>=1.11.0",
    "rdkit>=2023.3.1",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pyyaml>=6.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "tqdm>=4.64.0",
    "click>=8.0.0",
    "hydra-core>=1.3.0",
]

[project.optional-dependencies]
wandb = ["wandb>=0.15.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
    "types-PyYAML>=6.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.0.0",
]

[project.scripts]
mol-download = "mol_active.scripts.download_data:main"
mol-train = "mol_active.scripts.train:main"
mol-evaluate = "mol_active.scripts.evaluate:main"
mol-active-learn = "mol_active.scripts.active_learn:main"
mol-propose = "mol_active.scripts.propose:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "W", "B", "I", "N", "UP", "C4", "SIM"]
ignore = ["E501", "B008"]

[tool.ruff.per-file-ignores]
"tests/*" = ["B018"]
"notebooks/*" = ["B018", "F401"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=src/mol_active --cov-report=term-missing --cov-report=html"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning:rdkit.*",
]

[tool.coverage.run]
source = ["src/mol_active"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]